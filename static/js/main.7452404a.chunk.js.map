{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/CounterButton.js","components/Header.js","components/ErrorBoundry.js","constants.js","containers/App.js","actions.js","reducers.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","console","log","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","CounterButton","updateCount","setState","state","count","nextProps","nextState","this","color","onClick","Component","Header","ErrorBoundry","hasError","error","info","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","onRequestRobots","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","event","text","target","value","payload","fetch","then","response","json","data","catch","initialStateSearch","initialStateRobots","rootReducer","createLogger","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7452404a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 tc grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?150x200`} alt=\"photo\"></img>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  console.log(\"Cardlist\")\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card key={i} id={user.id} name={user.name} email={user.email} />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({searchfield, searchChange}) => {\n  console.log(\"SearchBox\")\n  return (\n    <div className=\"pa2\">\n      <input className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"search robots\" onChange={searchChange} />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"5px solid black\",\n        height: \"800px\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass CounterButton extends Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.count !== nextState.count) {\n      return true;\n    }\n    return false;\n  }\n\n  updateCount = () => {\n    this.setState((state) => {\n      return { count: this.state.count + 1 };\n    });\n  };\n\n  render() {\n    console.log(\"CounterButton\");\n    return (\n      <button color={this.props.color} onClick={this.updateCount}>\n        Count: {this.state.count}\n      </button>\n    );\n  }\n}\n\nexport default CounterButton;\n","import React, { Component } from \"react\";\nimport CounterButton from \"./CounterButton\";\n\nclass Header extends Component {\n//   shouldComponentUpdate(nextProps, nextState) {\n//     return false;\n//   }\n\n  render() {\n    console.log(\"Header\");\n    return (\n      <div>\n        <h1 className=\"f1\">RoboFriends</h1>\n        <CounterButton color={\"red\"} />\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, {Component} from 'react'\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true})\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING'\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS'\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport Header from '../components/Header'\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport \"./App.css\";\n\nimport { requestRobots, setSearchField } from \"../actions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots()),\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { searchField, onSearchChange, robots, isPending } = this.props;\n\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return isPending ? (\n      <h1>Loading</h1>\n    ) : (\n      <div className=\"tc\">\n        <Header/>\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants\";\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text,\n});\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  fetch(\"https://jsonplaceholder.typicode.com/users\").then((response) =>\n    response\n      .json()\n      .then((data) => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n      .catch((error) =>\n        dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error })\n      )\n  );\n};\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants\";\n\nconst initialStateSearch = {\n  searchField: \"\",\n\n};\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n}\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false,\n      });\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false,\n      });\n    default:\n      return state\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport { searchRobots, requestRobots } from \"./reducers\";\nimport tachyons from \"tachyons\";\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}